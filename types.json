{
  "Identifier": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "Identifier"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "name": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    }
  },
  "ExpressionStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ExpressionStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "NewExpression",
        "CallExpression",
        "AssignmentExpression",
        "MemberExpression",
        "Literal",
        "ThisExpression",
        "UpdateExpression",
        "TSTypeAssertion",
        "ArrowFunctionExpression",
        "AwaitExpression",
        "YieldExpression",
        "FunctionExpression",
        "UnaryExpression",
        "ClassExpression",
        "SequenceExpression",
        "BinaryExpression",
        "LogicalExpression",
        "ObjectExpression",
        "ArrayExpression",
        "ConditionalExpression",
        "TSNonNullExpression",
        "TSAsExpression",
        "JSXElement",
        "JSXFragment",
        "MetaProperty",
        "TemplateLiteral",
        "TaggedTemplateExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "directive": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "Program": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "Program"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ExpressionStatement",
        "ClassDeclaration",
        "TSInterfaceDeclaration",
        "TSAbstractClassDeclaration",
        "VariableDeclaration",
        "FunctionDeclaration",
        "TSModuleDeclaration",
        "TSImportEqualsDeclaration",
        "ExportNamedDeclaration",
        "ImportDeclaration",
        "TSExportAssignment",
        "ExportDefaultDeclaration",
        "TSTypeAliasDeclaration",
        "TSDeclareFunction",
        "EmptyStatement",
        "TSEnumDeclaration",
        "TSNamespaceExportDeclaration",
        "WhileStatement",
        "BlockStatement",
        "IfStatement",
        "ReturnStatement",
        "ForOfStatement",
        "ForStatement",
        "LabeledStatement",
        "DoWhileStatement",
        "ForInStatement",
        "BreakStatement",
        "TryStatement",
        "WithStatement",
        "SwitchStatement",
        "ContinueStatement",
        "DebuggerStatement",
        "ExportAllDeclaration",
        "ThrowStatement"
      ]
    },
    "sourceType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "script",
        "module"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ClassBody": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ClassBody"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ClassProperty",
        "MethodDefinition",
        "TSAbstractClassProperty",
        "TSAbstractMethodDefinition",
        "TSIndexSignature"
      ]
    }
  },
  "ClassDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ClassDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "ClassBody"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "superClass": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "CallExpression",
        "Literal",
        "ClassExpression",
        "TSAsExpression",
        "AwaitExpression",
        "YieldExpression",
        "ThisExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declare": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "superTypeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "implements": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ClassImplements"
      ]
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    }
  },
  "TSBooleanKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSBooleanKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTypeAnnotation": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeAnnotation"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSBooleanKeyword",
        "TSArrayType",
        "TSStringKeyword",
        "TSVoidKeyword",
        "TSTypeReference",
        "TSFunctionType",
        "TSNumberKeyword",
        "TSTypeQuery",
        "TSAnyKeyword",
        "TSTypeLiteral",
        "TSIndexedAccessType",
        "TSUnionType",
        "TSLiteralType",
        "TSConstructorType",
        "TSTupleType",
        "TSTypePredicate",
        "TSBigIntKeyword",
        "TSObjectKeyword",
        "TSIntersectionType",
        "TSUnknownKeyword",
        "TSThisType",
        "TSParenthesizedType",
        "TSConditionalType",
        "TSMappedType",
        "TSTypeOperator",
        "TSNullKeyword",
        "TSImportType",
        "TSInferType",
        "TSNeverKeyword",
        "TSUndefinedKeyword",
        "TSSymbolKeyword"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ClassProperty": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ClassProperty"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "key": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "Literal",
        "CallExpression",
        "AssignmentExpression",
        "BinaryExpression",
        "UnaryExpression",
        "TSTypeAssertion",
        "TemplateLiteral"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "MemberExpression",
        "ArrowFunctionExpression",
        "Identifier",
        "ObjectExpression",
        "NewExpression",
        "CallExpression",
        "ClassExpression",
        "BinaryExpression",
        "FunctionExpression",
        "ArrayExpression",
        "UnaryExpression",
        "LogicalExpression",
        "TSTypeAssertion",
        "ThisExpression",
        "YieldExpression",
        "AssignmentExpression",
        "UpdateExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "static": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "readonly": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "accessibility": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "public",
        "private",
        "protected"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    },
    "definite": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTypeReference": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeReference"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeName": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "TSQualifiedName"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSArrayType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSArrayType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "elementType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeReference",
        "TSTypeQuery",
        "TSStringKeyword",
        "TSAnyKeyword",
        "TSParenthesizedType",
        "TSVoidKeyword",
        "TSArrayType",
        "TSTypeLiteral",
        "TSNumberKeyword",
        "TSBooleanKeyword",
        "TSTupleType",
        "TSIndexedAccessType",
        "TSMappedType",
        "TSNeverKeyword",
        "TSNullKeyword",
        "TSSymbolKeyword",
        "TSUnknownKeyword"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ThisExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ThisExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "MemberExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "MemberExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "object": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "ThisExpression",
        "MemberExpression",
        "Identifier",
        "Super",
        "Literal",
        "TSTypeAssertion",
        "CallExpression",
        "TSAsExpression",
        "ArrayExpression",
        "AwaitExpression",
        "NewExpression",
        "LogicalExpression",
        "AssignmentExpression",
        "SequenceExpression",
        "ObjectExpression",
        "TSNonNullExpression",
        "MetaProperty",
        "TaggedTemplateExpression",
        "TemplateLiteral",
        "ArrowFunctionExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "property": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal",
        "MemberExpression",
        "BinaryExpression",
        "UpdateExpression",
        "AwaitExpression",
        "TSAsExpression",
        "TSTypeAssertion",
        "SequenceExpression",
        "ThisExpression",
        "TemplateLiteral",
        "CallExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ReturnStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ReturnStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "MemberExpression",
        "CallExpression",
        "Identifier",
        "Literal",
        "NewExpression",
        "BinaryExpression",
        "ClassExpression",
        "ConditionalExpression",
        "TSTypeAssertion",
        "ObjectExpression",
        "ArrayExpression",
        "UnaryExpression",
        "TSAsExpression",
        "JSXElement",
        "ArrowFunctionExpression",
        "AssignmentExpression",
        "ThisExpression",
        "TSNonNullExpression",
        "SequenceExpression",
        "FunctionExpression",
        "AwaitExpression",
        "LogicalExpression",
        "JSXFragment",
        "TaggedTemplateExpression",
        "TemplateLiteral",
        "MetaProperty",
        "YieldExpression",
        "UpdateExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "BlockStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "BlockStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ReturnStatement",
        "TSAbstractClassDeclaration",
        "ClassDeclaration",
        "ExpressionStatement",
        "VariableDeclaration",
        "IfStatement",
        "SwitchStatement",
        "FunctionDeclaration",
        "ForOfStatement",
        "ThrowStatement",
        "ForStatement",
        "BreakStatement",
        "ContinueStatement",
        "ForInStatement",
        "LabeledStatement",
        "TSEnumDeclaration",
        "WhileStatement",
        "TSTypeAliasDeclaration",
        "TSInterfaceDeclaration",
        "DoWhileStatement",
        "EmptyStatement",
        "BlockStatement",
        "TryStatement",
        "DebuggerStatement",
        "WithStatement",
        "TSDeclareFunction",
        "ExportNamedDeclaration",
        "TSModuleDeclaration",
        "TSExportAssignment",
        "ExportAllDeclaration",
        "ExportDefaultDeclaration",
        "TSImportEqualsDeclaration",
        "ImportDeclaration"
      ]
    }
  },
  "FunctionExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "FunctionExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "generator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "TSParameterProperty",
        "AssignmentPattern",
        "RestElement",
        "ArrayPattern",
        "ObjectPattern"
      ]
    },
    "body": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "async": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "returnType": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "CallExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "CallExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "callee": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "MemberExpression",
        "ArrowFunctionExpression",
        "Identifier",
        "Super",
        "TSNonNullExpression",
        "Import",
        "FunctionExpression",
        "CallExpression",
        "NewExpression",
        "TSTypeAssertion",
        "TSAsExpression",
        "AwaitExpression",
        "SequenceExpression",
        "Literal",
        "ThisExpression",
        "TemplateLiteral"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "arguments": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "FunctionExpression",
        "Identifier",
        "CallExpression",
        "MemberExpression",
        "Literal",
        "BinaryExpression",
        "ObjectExpression",
        "UnaryExpression",
        "SpreadElement",
        "ArrayExpression",
        "ArrowFunctionExpression",
        "TemplateLiteral",
        "TSAsExpression",
        "TSNonNullExpression",
        "NewExpression",
        "AwaitExpression",
        "YieldExpression",
        "ThisExpression",
        "TSTypeAssertion",
        "BigIntLiteral",
        "UpdateExpression",
        "AssignmentExpression",
        "ClassExpression",
        "SequenceExpression",
        "ConditionalExpression",
        "TaggedTemplateExpression",
        "LogicalExpression"
      ]
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "MethodDefinition": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "MethodDefinition"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "key": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal",
        "MemberExpression",
        "BinaryExpression",
        "CallExpression",
        "UnaryExpression",
        "TSTypeAssertion",
        "TemplateLiteral",
        "ArrayExpression",
        "ObjectExpression",
        "SequenceExpression",
        "ArrowFunctionExpression",
        "MetaProperty",
        "YieldExpression",
        "ConditionalExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "FunctionExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "static": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "kind": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "method",
        "get",
        "set",
        "constructor"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "accessibility": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "private",
        "public",
        "protected"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    }
  },
  "TSAbstractClassDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSAbstractClassDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "ClassBody"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "superClass": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "implements": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ClassImplements"
      ]
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declare": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "superTypeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "NewExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "NewExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "callee": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "TSTypeAssertion",
        "AwaitExpression",
        "ArrayExpression",
        "Super",
        "CallExpression",
        "ClassExpression",
        "ThisExpression",
        "NewExpression",
        "TemplateLiteral",
        "BinaryExpression",
        "TSAsExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "arguments": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Literal",
        "NewExpression",
        "ObjectExpression",
        "ArrowFunctionExpression",
        "ThisExpression",
        "ArrayExpression",
        "BinaryExpression",
        "Identifier",
        "MemberExpression",
        "TSAsExpression",
        "FunctionExpression",
        "TemplateLiteral",
        "AwaitExpression",
        "SpreadElement",
        "UnaryExpression",
        "TSTypeAssertion",
        "CallExpression"
      ]
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ArrowFunctionExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ArrowFunctionExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "generator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "ObjectPattern",
        "TSParameterProperty",
        "ArrayPattern",
        "RestElement",
        "AssignmentPattern"
      ]
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "MemberExpression",
        "Identifier",
        "Literal",
        "CallExpression",
        "ConditionalExpression",
        "LogicalExpression",
        "ArrayExpression",
        "ObjectExpression",
        "BinaryExpression",
        "TSTypeAssertion",
        "FunctionExpression",
        "JSXElement",
        "AssignmentExpression",
        "NewExpression",
        "ThisExpression",
        "ArrowFunctionExpression",
        "TSAsExpression",
        "UnaryExpression",
        "TemplateLiteral",
        "ClassExpression",
        "UpdateExpression",
        "AwaitExpression",
        "MetaProperty",
        "YieldExpression",
        "SequenceExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "async": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "returnType": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSStringKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSStringKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSPropertySignature": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSPropertySignature"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "key": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal",
        "MemberExpression",
        "AssignmentExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "readonly": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "initializer": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "accessibility": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "public",
        "private",
        "protected"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSVoidKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSVoidKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSMethodSignature": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSMethodSignature"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "key": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal",
        "CallExpression",
        "BinaryExpression",
        "MemberExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "RestElement",
        "AssignmentPattern",
        "ArrayPattern",
        "ObjectPattern"
      ]
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "static": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSInterfaceBody": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSInterfaceBody"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSPropertySignature",
        "TSMethodSignature",
        "TSCallSignatureDeclaration",
        "TSIndexSignature",
        "TSConstructSignatureDeclaration"
      ]
    }
  },
  "TSInterfaceDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSInterfaceDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSInterfaceBody"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "heritage": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSInterfaceHeritage"
      ]
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declare": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "abstract": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    }
  },
  "TSAbstractClassProperty": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSAbstractClassProperty"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "key": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "static": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "readonly": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "accessibility": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "public",
        "protected",
        "private"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "definite": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSAbstractMethodDefinition": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSAbstractMethodDefinition"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "key": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "FunctionExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "static": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "kind": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "get",
        "set",
        "method",
        "constructor"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "accessibility": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "public",
        "protected",
        "private"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ClassImplements": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ClassImplements"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "Literal": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "Literal"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "raw": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": true,
      "isString": true,
      "stringValues": [],
      "isNumber": true,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "regex": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {
        "pattern": {
          "isOptional": false,
          "isNullable": false,
          "isBoolean": false,
          "isString": true,
          "stringValues": [],
          "isNumber": false,
          "containTypes": [],
          "objectTypes": {},
          "containArrayOfTypes": []
        },
        "flags": {
          "isOptional": false,
          "isNullable": false,
          "isBoolean": false,
          "isString": true,
          "stringValues": [],
          "isNumber": false,
          "containTypes": [],
          "objectTypes": {},
          "containArrayOfTypes": []
        }
      },
      "containArrayOfTypes": []
    }
  },
  "VariableDeclarator": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "VariableDeclarator"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "ObjectPattern",
        "ArrayPattern"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "init": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "CallExpression",
        "ArrowFunctionExpression",
        "Literal",
        "NewExpression",
        "Identifier",
        "ObjectExpression",
        "MemberExpression",
        "ArrayExpression",
        "FunctionExpression",
        "LogicalExpression",
        "ConditionalExpression",
        "BinaryExpression",
        "TSTypeAssertion",
        "TSAsExpression",
        "AssignmentExpression",
        "AwaitExpression",
        "ThisExpression",
        "BigIntLiteral",
        "UnaryExpression",
        "ClassExpression",
        "JSXElement",
        "SequenceExpression",
        "TemplateLiteral",
        "YieldExpression",
        "TaggedTemplateExpression",
        "TSNonNullExpression",
        "MetaProperty",
        "UpdateExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "definite": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "VariableDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "VariableDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declarations": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "VariableDeclarator"
      ]
    },
    "kind": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "let",
        "const",
        "var"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declare": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "UnaryExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "UnaryExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "operator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "!",
        "-",
        "typeof",
        "+",
        "void",
        "~",
        "delete"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "prefix": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal",
        "MemberExpression",
        "ClassExpression",
        "CallExpression",
        "UnaryExpression",
        "BigIntLiteral",
        "AwaitExpression",
        "TSTypeAssertion",
        "BinaryExpression",
        "ThisExpression",
        "LogicalExpression",
        "TemplateLiteral",
        "ArrowFunctionExpression",
        "UpdateExpression",
        "AssignmentExpression",
        "ObjectExpression",
        "NewExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "AssignmentExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "AssignmentExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "operator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "=",
        "+=",
        "-=",
        "*=",
        "/=",
        "%=",
        "&=",
        "|=",
        "<<=",
        ">>=",
        ">>>=",
        "^=",
        "**="
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "left": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "MemberExpression",
        "Identifier",
        "ArrayPattern",
        "SequenceExpression",
        "NewExpression",
        "ObjectPattern",
        "MetaProperty",
        "CallExpression",
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "right": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "BinaryExpression",
        "Identifier",
        "ArrowFunctionExpression",
        "CallExpression",
        "ObjectExpression",
        "FunctionExpression",
        "MemberExpression",
        "NewExpression",
        "ArrayExpression",
        "LogicalExpression",
        "AssignmentExpression",
        "UnaryExpression",
        "AwaitExpression",
        "ClassExpression",
        "SequenceExpression",
        "TSTypeAssertion",
        "ConditionalExpression",
        "TSAsExpression",
        "ThisExpression",
        "BigIntLiteral",
        "UpdateExpression",
        "YieldExpression",
        "MetaProperty",
        "TaggedTemplateExpression",
        "TemplateLiteral",
        "JSXElement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "IfStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "IfStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "test": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "UnaryExpression",
        "Literal",
        "BinaryExpression",
        "LogicalExpression",
        "MemberExpression",
        "Identifier",
        "CallExpression",
        "AssignmentExpression",
        "TSAsExpression",
        "AwaitExpression",
        "UpdateExpression",
        "SequenceExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "consequent": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "ExpressionStatement",
        "ReturnStatement",
        "BreakStatement",
        "VariableDeclaration",
        "LabeledStatement",
        "EmptyStatement",
        "ThrowStatement",
        "ContinueStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "alternate": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "IfStatement",
        "ExpressionStatement",
        "ReturnStatement",
        "VariableDeclaration",
        "BreakStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSFunctionType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSFunctionType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "parameters": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "RestElement",
        "AssignmentPattern",
        "TSParameterProperty",
        "ArrayPattern",
        "ObjectPattern"
      ]
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSNumberKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSNumberKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "BinaryExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "BinaryExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "operator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "+",
        ">",
        "===",
        "!==",
        "==",
        "<=",
        ">=",
        "-",
        "<",
        "*",
        "/",
        "|",
        ">>",
        "in",
        "&",
        ">>>",
        "<<",
        "**",
        "%",
        "instanceof",
        "^",
        "!="
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "left": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "MemberExpression",
        "Literal",
        "BinaryExpression",
        "CallExpression",
        "UnaryExpression",
        "Identifier",
        "BigIntLiteral",
        "UpdateExpression",
        "SequenceExpression",
        "LogicalExpression",
        "AwaitExpression",
        "ArrowFunctionExpression",
        "ThisExpression",
        "ObjectExpression",
        "TemplateLiteral",
        "AssignmentExpression",
        "NewExpression",
        "TSTypeAssertion",
        "TSAsExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "right": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "Identifier",
        "MemberExpression",
        "UnaryExpression",
        "BinaryExpression",
        "BigIntLiteral",
        "UpdateExpression",
        "ObjectExpression",
        "CallExpression",
        "ConditionalExpression",
        "LogicalExpression",
        "AwaitExpression",
        "ArrowFunctionExpression",
        "ThisExpression",
        "ArrayExpression",
        "FunctionExpression",
        "TemplateLiteral",
        "NewExpression",
        "TSTypeAssertion",
        "TSAsExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "Super": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "Super"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "FunctionDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "FunctionDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "generator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "async": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "RestElement",
        "ObjectPattern",
        "ArrayPattern",
        "AssignmentPattern",
        "TSParameterProperty"
      ]
    },
    "body": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "returnType": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSModuleBlock": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSModuleBlock"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ExportNamedDeclaration",
        "TSImportEqualsDeclaration",
        "ClassDeclaration",
        "VariableDeclaration",
        "FunctionDeclaration",
        "TSExportAssignment",
        "TSModuleDeclaration",
        "TSInterfaceDeclaration",
        "ExportDefaultDeclaration",
        "TSEnumDeclaration",
        "WhileStatement",
        "BreakStatement",
        "ContinueStatement",
        "DebuggerStatement",
        "DoWhileStatement",
        "ForInStatement",
        "IfStatement",
        "ExpressionStatement",
        "LabeledStatement",
        "ReturnStatement",
        "SwitchStatement",
        "ThrowStatement",
        "TryStatement",
        "WithStatement",
        "EmptyStatement",
        "BlockStatement",
        "TSDeclareFunction",
        "TSTypeAliasDeclaration",
        "ForStatement",
        "ImportDeclaration",
        "ExportAllDeclaration",
        "ForOfStatement"
      ]
    }
  },
  "TSModuleDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSModuleDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSModuleBlock",
        "TSModuleDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declare": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "global": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "modifiers": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSAsyncKeyword",
        "TSPublicKeyword",
        "TSPrivateKeyword",
        "TSStaticKeyword",
        "TSProtectedKeyword"
      ]
    }
  },
  "ExportNamedDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ExportNamedDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declaration": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSModuleDeclaration",
        "ClassDeclaration",
        "TSInterfaceDeclaration",
        "VariableDeclaration",
        "FunctionDeclaration",
        "TSDeclareFunction",
        "TSTypeAliasDeclaration",
        "TSEnumDeclaration",
        "TSAbstractClassDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "specifiers": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ExportSpecifier"
      ]
    },
    "source": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSImportEqualsDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSImportEqualsDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "moduleReference": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "TSQualifiedName",
        "TSExternalModuleReference"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "isExport": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSQualifiedName": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSQualifiedName"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "left": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "TSQualifiedName"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "right": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSParameterProperty": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSParameterProperty"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "accessibility": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "public",
        "private",
        "protected"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "parameter": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "ArrayPattern",
        "ObjectPattern",
        "AssignmentPattern",
        "RestElement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "readonly": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "static": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "export": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    }
  },
  "Property": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "Property"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "key": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "BinaryExpression",
        "Literal",
        "CallExpression",
        "TemplateLiteral",
        "MemberExpression",
        "AwaitExpression",
        "UnaryExpression",
        "TSTypeAssertion",
        "SequenceExpression",
        "LogicalExpression",
        "ArrayExpression",
        "ObjectExpression",
        "YieldExpression",
        "MetaProperty"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "FunctionExpression",
        "Identifier",
        "TSTypeAssertion",
        "ObjectExpression",
        "Literal",
        "MemberExpression",
        "ArrowFunctionExpression",
        "TSNonNullExpression",
        "NewExpression",
        "ArrayExpression",
        "AssignmentExpression",
        "ObjectPattern",
        "TSAsExpression",
        "BinaryExpression",
        "AssignmentPattern",
        "ClassExpression",
        "CallExpression",
        "ConditionalExpression",
        "ArrayPattern",
        "UnaryExpression",
        "AwaitExpression",
        "ThisExpression",
        "MetaProperty",
        "TemplateLiteral"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "computed": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "method": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "shorthand": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "kind": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "get",
        "set",
        "init"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ObjectExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ObjectExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "properties": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Property",
        "SpreadElement"
      ]
    }
  },
  "AssignmentPattern": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "AssignmentPattern"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "left": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "ArrayPattern",
        "ObjectPattern"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "right": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "Identifier",
        "ClassExpression",
        "FunctionExpression",
        "ObjectExpression",
        "ArrayExpression",
        "NewExpression",
        "ArrowFunctionExpression",
        "ConditionalExpression",
        "AwaitExpression",
        "YieldExpression",
        "CallExpression",
        "MemberExpression",
        "BinaryExpression",
        "TemplateLiteral",
        "TSTypeAssertion",
        "UnaryExpression",
        "ThisExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "RestElement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "RestElement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "ObjectPattern",
        "ArrayPattern",
        "AssignmentPattern"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    }
  },
  "TSExternalModuleReference": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSExternalModuleReference"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSCallSignatureDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSCallSignatureDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "RestElement",
        "ObjectPattern"
      ]
    },
    "returnType": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSInterfaceHeritage": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSInterfaceHeritage"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "UnaryExpression",
        "CallExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSExportAssignment": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSExportAssignment"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "BinaryExpression",
        "UnaryExpression",
        "ClassExpression",
        "ObjectExpression",
        "NewExpression",
        "MemberExpression",
        "Literal",
        "FunctionExpression",
        "ThisExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ImportSpecifier": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ImportSpecifier"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "local": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "imported": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ImportDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ImportDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "source": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "specifiers": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ImportSpecifier",
        "ImportDefaultSpecifier",
        "ImportNamespaceSpecifier"
      ]
    }
  },
  "TSTypeQuery": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeQuery"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "exprName": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSQualifiedName",
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ArrayExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ArrayExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "elements": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "Literal",
        "ArrayExpression",
        "ObjectExpression",
        "FunctionExpression",
        "NewExpression",
        "CallExpression",
        "AssignmentExpression",
        "BigIntLiteral",
        "BinaryExpression",
        "UpdateExpression",
        null,
        "SpreadElement",
        "MemberExpression",
        "TSTypeAssertion",
        "ArrowFunctionExpression",
        "ThisExpression",
        "AwaitExpression",
        "UnaryExpression",
        "SequenceExpression",
        "TemplateLiteral"
      ]
    }
  },
  "TSTypeLiteral": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeLiteral"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "members": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSPropertySignature",
        "TSConstructSignatureDeclaration",
        "TSCallSignatureDeclaration",
        "TSIndexSignature",
        "TSMethodSignature"
      ]
    }
  },
  "TSTypeParameter": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeParameter"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "name": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "constraint": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeLiteral",
        "TSTypeReference",
        "TSLiteralType",
        "TSObjectKeyword",
        "TSNumberKeyword",
        "TSUnionType",
        "TSTypeOperator",
        "TSArrayType",
        "TSConstructorType",
        "TSStringKeyword",
        "TSFunctionType",
        "TSMappedType",
        "TSTupleType",
        "TSIndexedAccessType",
        "TSTypeQuery",
        "TSThisType",
        "TSAnyKeyword",
        "TSParenthesizedType",
        "TSNullKeyword",
        "TSUndefinedKeyword",
        "TSVoidKeyword"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "default": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSIndexedAccessType",
        "TSObjectKeyword",
        "TSTypeLiteral",
        "TSStringKeyword",
        "TSAnyKeyword",
        "TSNumberKeyword",
        "TSTypeReference",
        "TSLiteralType",
        "TSNeverKeyword",
        "TSFunctionType",
        "TSUnionType",
        "TSIntersectionType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTypeParameterDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeParameterDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSTypeParameter"
      ]
    }
  },
  "TSTypeAssertion": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeAssertion"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeReference",
        "TSTypeLiteral",
        "TSTupleType",
        "TSNumberKeyword",
        "TSArrayType",
        "TSAnyKeyword",
        "TSStringKeyword",
        "TSTypeQuery",
        "TSBooleanKeyword",
        "TSFunctionType",
        "TSObjectKeyword",
        "TSUnionType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "Identifier",
        "CallExpression",
        "ArrayExpression",
        "ObjectExpression",
        "TSTypeAssertion",
        "MemberExpression",
        "ThisExpression",
        "NewExpression",
        "UnaryExpression",
        "FunctionExpression",
        "AwaitExpression",
        "AssignmentExpression",
        "ArrowFunctionExpression",
        "TemplateLiteral",
        "BinaryExpression",
        "UpdateExpression",
        "SequenceExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSIndexSignature": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSIndexSignature"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "index": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "RestElement",
        "TSParameterProperty",
        "AssignmentPattern"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "static": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "readonly": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "accessibility": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "public",
        "private"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "export": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSAnyKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSAnyKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTypeParameterInstantiation": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeParameterInstantiation"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSTypeReference",
        "TSAnyKeyword",
        "TSStringKeyword",
        "TSTypeLiteral",
        "TSNumberKeyword",
        "TSUnionType",
        "TSArrayType",
        "TSTupleType",
        "TSIndexedAccessType",
        "TSVoidKeyword",
        "TSBooleanKeyword",
        "TSTypeOperator",
        "TSIntersectionType",
        "TSTypeQuery",
        "TSLiteralType",
        "TSThisType",
        "TSFunctionType",
        "TSParenthesizedType",
        "TSImportType",
        "TSNeverKeyword",
        "TSInferType",
        "TSMappedType",
        "TSNullKeyword",
        "TSUndefinedKeyword",
        "TSObjectKeyword",
        "TSUnknownKeyword"
      ]
    }
  },
  "ExportDefaultDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ExportDefaultDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declaration": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "TSInterfaceDeclaration",
        "BinaryExpression",
        "UnaryExpression",
        "ClassDeclaration",
        "MemberExpression",
        "ObjectExpression",
        "FunctionDeclaration",
        "NewExpression",
        "Literal",
        "ArrowFunctionExpression",
        "CallExpression",
        "TSAbstractClassDeclaration",
        "TSAsExpression",
        "JSXElement",
        "AssignmentExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ImportDefaultSpecifier": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ImportDefaultSpecifier"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "local": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ExportSpecifier": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ExportSpecifier"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "local": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "exported": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTypeAliasDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeAliasDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSFunctionType",
        "TSTypeLiteral",
        "TSMappedType",
        "TSUnionType",
        "TSTypeReference",
        "TSIntersectionType",
        "TSConditionalType",
        "TSArrayType",
        "TSTupleType",
        "TSTypeQuery",
        "TSStringKeyword",
        "TSNumberKeyword",
        "TSIndexedAccessType",
        "TSConstructorType",
        "TSTypeOperator",
        "TSLiteralType",
        "TSBooleanKeyword",
        "TSParenthesizedType",
        "TSAnyKeyword",
        "TSThisType",
        "TSVoidKeyword"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declare": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSDeclareFunction": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSDeclareFunction"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "generator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "async": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "RestElement",
        "ObjectPattern",
        "AssignmentPattern"
      ]
    },
    "returnType": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "declare": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "LogicalExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "LogicalExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "operator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "||",
        "&&"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "left": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "TSTypeAssertion",
        "MemberExpression",
        "LogicalExpression",
        "BinaryExpression",
        "UnaryExpression",
        "CallExpression",
        "ObjectExpression",
        "Literal",
        "ArrowFunctionExpression",
        "NewExpression",
        "AwaitExpression",
        "ArrayExpression",
        "AssignmentExpression",
        "FunctionExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "right": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "ObjectExpression",
        "BinaryExpression",
        "UnaryExpression",
        "MemberExpression",
        "CallExpression",
        "FunctionExpression",
        "ArrayExpression",
        "LogicalExpression",
        "Literal",
        "NewExpression",
        "ArrowFunctionExpression",
        "AwaitExpression",
        "AssignmentExpression",
        "ThisExpression",
        "ConditionalExpression",
        "SequenceExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ConditionalExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ConditionalExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "test": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAssertion",
        "BinaryExpression",
        "MemberExpression",
        "Literal",
        "Identifier",
        "LogicalExpression",
        "CallExpression",
        "AwaitExpression",
        "TemplateLiteral",
        "UnaryExpression",
        "ArrowFunctionExpression",
        "ObjectExpression",
        "NewExpression",
        "ArrayExpression",
        "AssignmentExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "consequent": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "ObjectExpression",
        "Literal",
        "MemberExpression",
        "Identifier",
        "UpdateExpression",
        "ConditionalExpression",
        "ArrowFunctionExpression",
        "CallExpression",
        "UnaryExpression",
        "BinaryExpression",
        "AwaitExpression",
        "FunctionExpression",
        "JSXElement",
        "ArrayExpression",
        "TSAsExpression",
        "AssignmentExpression",
        "NewExpression",
        "TemplateLiteral",
        "LogicalExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "alternate": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "CallExpression",
        "Identifier",
        "ArrayExpression",
        "ObjectExpression",
        "ConditionalExpression",
        "ArrowFunctionExpression",
        "LogicalExpression",
        "MemberExpression",
        "UnaryExpression",
        "AwaitExpression",
        "FunctionExpression",
        "JSXElement",
        "BinaryExpression",
        "AssignmentExpression",
        "TemplateLiteral",
        "UpdateExpression",
        "SequenceExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "EmptyStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "EmptyStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSEnumMember": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSEnumMember"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "initializer": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "MemberExpression",
        "UnaryExpression",
        "Identifier",
        "BinaryExpression",
        "CallExpression",
        "ThisExpression",
        "NewExpression",
        "ObjectExpression",
        "ArrowFunctionExpression",
        "AssignmentExpression",
        "UpdateExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSEnumDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSEnumDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "members": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSEnumMember"
      ]
    },
    "declare": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "const": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "modifiers": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSAsyncKeyword",
        "TSPublicKeyword",
        "TSPrivateKeyword",
        "TSStaticKeyword"
      ]
    },
    "decorators": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Decorator"
      ]
    }
  },
  "TSNamespaceExportDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSNamespaceExportDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "WhileStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "WhileStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "test": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "BinaryExpression",
        "CallExpression",
        "Identifier",
        "AwaitExpression",
        "AssignmentExpression",
        "TemplateLiteral",
        "LogicalExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "EmptyStatement",
        "BlockStatement",
        "BreakStatement",
        "ContinueStatement",
        "VariableDeclaration",
        "LabeledStatement",
        "ExpressionStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "BreakStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "BreakStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "label": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ContinueStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ContinueStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "label": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "DebuggerStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "DebuggerStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "DoWhileStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "DoWhileStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "test": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "BinaryExpression",
        "CallExpression",
        "Identifier",
        "AwaitExpression",
        "AssignmentExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "VariableDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ForInStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ForInStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "left": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "VariableDeclaration",
        "MemberExpression",
        "AssignmentExpression",
        "CallExpression",
        "NewExpression",
        "ObjectExpression",
        "ThisExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "right": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "ObjectExpression",
        "Identifier",
        "ArrayPattern",
        "MemberExpression",
        "AwaitExpression",
        "ThisExpression",
        "SequenceExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "VariableDeclaration",
        "EmptyStatement",
        "ExpressionStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "LabeledStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "LabeledStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "label": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "VariableDeclaration",
        "ForStatement",
        "BreakStatement",
        "WhileStatement",
        "LabeledStatement",
        "ForOfStatement",
        "ForInStatement",
        "DoWhileStatement",
        "IfStatement",
        "TryStatement",
        "EmptyStatement",
        "ContinueStatement",
        "ExpressionStatement",
        "SwitchStatement",
        "BlockStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "SwitchCase": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "SwitchCase"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "test": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "MemberExpression",
        "SequenceExpression",
        "Identifier",
        "AwaitExpression",
        "TemplateLiteral",
        "CallExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "consequent": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "BreakStatement",
        "IfStatement",
        "VariableDeclaration",
        "ReturnStatement",
        "ExpressionStatement",
        "ContinueStatement",
        "BlockStatement",
        "FunctionDeclaration",
        "SwitchStatement"
      ]
    }
  },
  "SwitchStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "SwitchStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "discriminant": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "Literal",
        "AwaitExpression",
        "UnaryExpression",
        "BinaryExpression",
        "TemplateLiteral",
        "CallExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "cases": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "SwitchCase"
      ]
    }
  },
  "ThrowStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ThrowStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "NewExpression",
        "CallExpression",
        "Identifier",
        "ArrayExpression",
        "ObjectExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "CatchClause": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "CatchClause"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "param": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "ArrayPattern",
        "ObjectPattern"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TryStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TryStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "block": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "handler": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "CatchClause"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "finalizer": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "WithStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "WithStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "object": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "AwaitExpression",
        "ObjectExpression",
        "NewExpression",
        "MemberExpression",
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "VariableDeclaration",
        "ReturnStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSConstructSignatureDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSConstructSignatureDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "params": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "RestElement",
        "Identifier",
        "ObjectPattern",
        "TSParameterProperty"
      ]
    },
    "returnType": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "SpreadElement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "SpreadElement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "CallExpression",
        "ObjectExpression",
        "AwaitExpression",
        "TSAsExpression",
        "ConditionalExpression",
        "ArrayExpression",
        "LogicalExpression",
        "NewExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ClassExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ClassExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "id": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "ClassBody"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "superClass": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "ClassExpression",
        "YieldExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "implements": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "ClassImplements"
      ]
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "superTypeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ImportNamespaceSpecifier": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ImportNamespaceSpecifier"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "local": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTupleType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTupleType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "elementTypes": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSAnyKeyword",
        "TSNumberKeyword",
        "TSBooleanKeyword",
        "TSStringKeyword",
        "TSTypeLiteral",
        "TSTypeReference",
        "TSArrayType",
        "TSFunctionType",
        "TSLiteralType",
        "TSTupleType",
        "TSRestType",
        "TSIntersectionType",
        "TSConstructorType",
        "TSParenthesizedType",
        "TSNeverKeyword",
        "TSVoidKeyword",
        "TSOptionalType",
        "TSUnionType",
        "TSUndefinedKeyword",
        "TSTypeOperator",
        "TSIndexedAccessType"
      ]
    }
  },
  "TSIndexedAccessType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSIndexedAccessType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "objectType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSAnyKeyword",
        "TSTypeReference",
        "TSParenthesizedType",
        "TSTypeLiteral",
        "TSIndexedAccessType",
        "TSTupleType",
        "TSMappedType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "indexType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTupleType",
        "TSLiteralType",
        "TSTypeReference",
        "TSNeverKeyword",
        "TSTypeOperator",
        "TSIntersectionType",
        "TSTypeQuery",
        "TSIndexedAccessType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSLiteralType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSLiteralType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "literal": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "BigIntLiteral",
        "UnaryExpression",
        "TemplateLiteral"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSMappedType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSMappedType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameter": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameter"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSConditionalType",
        "TSIndexedAccessType",
        "TSTypeReference",
        "TSStringKeyword",
        "TSNumberKeyword",
        "TSLiteralType",
        "TSAnyKeyword",
        "TSIntersectionType",
        "TSNeverKeyword",
        "TSTypeLiteral",
        "TSUnionType",
        "TSBooleanKeyword",
        "TSFunctionType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": true,
      "stringValues": [
        "-"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "readonly": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ObjectPattern": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ObjectPattern"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "properties": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Property",
        "RestElement"
      ]
    },
    "typeAnnotation": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TemplateElement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TemplateElement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {
        "raw": {
          "isOptional": false,
          "isNullable": false,
          "isBoolean": false,
          "isString": true,
          "stringValues": [],
          "isNumber": false,
          "containTypes": [],
          "objectTypes": {},
          "containArrayOfTypes": []
        },
        "cooked": {
          "isOptional": false,
          "isNullable": false,
          "isBoolean": false,
          "isString": true,
          "stringValues": [],
          "isNumber": false,
          "containTypes": [],
          "objectTypes": {},
          "containArrayOfTypes": []
        }
      },
      "containArrayOfTypes": []
    },
    "tail": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TemplateLiteral": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TemplateLiteral"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "quasis": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TemplateElement"
      ]
    },
    "expressions": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "MemberExpression",
        "BinaryExpression",
        "Identifier",
        "LogicalExpression",
        "CallExpression",
        "Literal",
        "ArrowFunctionExpression",
        "ArrayExpression",
        "ObjectExpression",
        "FunctionExpression",
        "TemplateLiteral",
        "ConditionalExpression",
        "NewExpression",
        "TSTypeAssertion",
        "UnaryExpression",
        "YieldExpression",
        "TSAsExpression"
      ]
    }
  },
  "TSUndefinedKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSUndefinedKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSUnionType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSUnionType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "types": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSStringKeyword",
        "TSUndefinedKeyword",
        "TSTypeReference",
        "TSTypeLiteral",
        "TSNumberKeyword",
        "TSBooleanKeyword",
        "TSArrayType",
        "TSLiteralType",
        "TSParenthesizedType",
        "TSNullKeyword",
        "TSTypeOperator",
        "TSSymbolKeyword",
        "TSVoidKeyword",
        "TSNeverKeyword",
        "TSObjectKeyword",
        "TSAnyKeyword",
        "TSIntersectionType",
        "TSTypeQuery",
        "TSTupleType",
        "TSBigIntKeyword",
        "TSIndexedAccessType",
        "TSUnknownKeyword"
      ]
    }
  },
  "TSAsExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSAsExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "Literal",
        "ObjectExpression",
        "FunctionExpression",
        "CallExpression",
        "ConditionalExpression",
        "ThisExpression",
        "MemberExpression",
        "ClassExpression",
        "ArrayExpression",
        "TSAsExpression",
        "BinaryExpression",
        "TemplateLiteral",
        "TaggedTemplateExpression",
        "ArrowFunctionExpression",
        "JSXElement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSAnyKeyword",
        "TSTypeReference",
        "TSUnionType",
        "TSNumberKeyword",
        "TSLiteralType",
        "TSIntersectionType",
        "TSArrayType",
        "TSParenthesizedType",
        "TSTypeLiteral",
        "TSTypeOperator",
        "TSConstructorType",
        "TSTupleType",
        "TSStringKeyword",
        "TSFunctionType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ForOfStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ForOfStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "left": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "VariableDeclaration",
        "Identifier",
        "MemberExpression",
        "ArrayPattern",
        "ObjectExpression",
        "UpdateExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "right": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "CallExpression",
        "MemberExpression",
        "Identifier",
        "ArrayPattern",
        "AwaitExpression",
        "TSTypeAssertion",
        "NewExpression",
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "ContinueStatement",
        "ExpressionStatement",
        "EmptyStatement",
        "ForOfStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "await": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSParenthesizedType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSParenthesizedType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSUnionType",
        "TSFunctionType",
        "TSConditionalType",
        "TSTypeOperator",
        "TSIntersectionType",
        "TSConstructorType",
        "TSInferType",
        "TSTypeQuery",
        "TSMappedType",
        "TSArrayType",
        "TSLiteralType",
        "TSTupleType",
        "TSTypeLiteral",
        "TSTypeReference"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSNonNullExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSNonNullExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "MemberExpression",
        "Identifier",
        "Literal",
        "CallExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "UpdateExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "UpdateExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "operator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "++",
        "--"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "prefix": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "MemberExpression",
        "Identifier",
        "TSNonNullExpression",
        "Literal",
        "BinaryExpression",
        "ObjectExpression",
        "CallExpression",
        "FunctionExpression",
        "ThisExpression",
        "ArrayExpression",
        "NewExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ForStatement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ForStatement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "init": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "VariableDeclaration",
        "AssignmentExpression",
        "Identifier",
        "AwaitExpression",
        "SequenceExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "test": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BinaryExpression",
        "Literal",
        "SequenceExpression",
        "Identifier",
        "AwaitExpression",
        "UnaryExpression",
        "AssignmentExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "update": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "UpdateExpression",
        "SequenceExpression",
        "AssignmentExpression",
        "Identifier",
        "AwaitExpression",
        "UnaryExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "body": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "BlockStatement",
        "ContinueStatement",
        "VariableDeclaration",
        "EmptyStatement",
        "ExpressionStatement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSConstructorType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSConstructorType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterDeclaration"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "parameters": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        "RestElement",
        "ArrayPattern"
      ]
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ArrayPattern": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ArrayPattern"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "elements": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Identifier",
        null,
        "AssignmentExpression",
        "RestElement",
        "ArrayPattern",
        "Literal",
        "ObjectPattern",
        "ObjectExpression",
        "AssignmentPattern",
        "MemberExpression",
        "ArrayExpression",
        "SpreadElement"
      ]
    },
    "typeAnnotation": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "optional": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSObjectKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSObjectKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTypePredicate": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypePredicate"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "parameterName": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "TSThisType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeAnnotation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "SequenceExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "SequenceExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expressions": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "Literal",
        "Identifier",
        "UpdateExpression",
        "CallExpression",
        "BinaryExpression",
        "TemplateLiteral",
        "AssignmentExpression",
        "ArrowFunctionExpression",
        "FunctionExpression",
        "ObjectExpression",
        "UnaryExpression",
        "ArrayExpression",
        "TSNonNullExpression",
        "ConditionalExpression",
        "TSAsExpression",
        "AwaitExpression",
        "NewExpression",
        "MemberExpression",
        "JSXElement",
        "LogicalExpression"
      ]
    }
  },
  "AwaitExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "AwaitExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "CallExpression",
        "Identifier",
        "UnaryExpression",
        "AwaitExpression",
        "MemberExpression",
        "NewExpression",
        "ThisExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSTypeOperator": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSTypeOperator"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "operator": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "keyof",
        "unique"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeReference",
        "TSSymbolKeyword",
        "TSAnyKeyword",
        "TSIndexedAccessType",
        "TSTypeQuery"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "Import": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "Import"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "YieldExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "YieldExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "delegate": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "Identifier",
        "ConditionalExpression",
        "ArrayExpression",
        "BinaryExpression",
        "CallExpression",
        "TemplateLiteral",
        "NewExpression",
        "ArrowFunctionExpression",
        "ObjectExpression",
        "YieldExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSBigIntKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSBigIntKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "BigIntLiteral": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "BigIntLiteral"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "raw": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXIdentifier": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXIdentifier"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "name": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXOpeningElement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXOpeningElement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "selfClosing": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "name": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXIdentifier",
        "JSXMemberExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "attributes": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "JSXAttribute",
        "JSXSpreadAttribute"
      ]
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXClosingElement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXClosingElement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "name": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXIdentifier",
        "JSXMemberExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXText": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXText"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "raw": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXElement": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXElement"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "openingElement": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXOpeningElement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "closingElement": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXClosingElement"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "children": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "JSXText",
        "JSXElement",
        "JSXExpressionContainer",
        "JSXFragment",
        "JSXSpreadChild"
      ]
    }
  },
  "JSXExpressionContainer": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXExpressionContainer"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "ArrowFunctionExpression",
        "Literal",
        "TSAsExpression",
        "Identifier",
        "JSXEmptyExpression",
        "JSXElement",
        "MemberExpression",
        "ObjectExpression",
        "ConditionalExpression",
        "CallExpression",
        "BinaryExpression",
        "ArrayExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXAttribute": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXAttribute"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "name": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXIdentifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "value": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXExpressionContainer",
        "Literal"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXSpreadAttribute": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXSpreadAttribute"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "argument": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "SequenceExpression",
        "ObjectExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSIntersectionType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSIntersectionType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "types": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "TSTypeReference",
        "TSTypeLiteral",
        "TSIndexedAccessType",
        "TSMappedType",
        "TSTypeQuery",
        "TSNumberKeyword",
        "TSBooleanKeyword",
        "TSParenthesizedType",
        "TSObjectKeyword",
        "TSStringKeyword",
        "TSUndefinedKeyword",
        "TSThisType"
      ]
    }
  },
  "TSConditionalType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSConditionalType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "checkType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSIndexedAccessType",
        "TSStringKeyword",
        "TSTypeReference",
        "TSTupleType",
        "TSTypeQuery",
        "TSNumberKeyword",
        "TSParenthesizedType",
        "TSUndefinedKeyword",
        "TSTypeLiteral"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "extendsType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSBooleanKeyword",
        "TSIndexedAccessType",
        "TSUnionType",
        "TSTypeOperator",
        "TSTypeLiteral",
        "TSTypeReference",
        "TSTupleType",
        "TSArrayType",
        "TSStringKeyword",
        "TSFunctionType",
        "TSParenthesizedType",
        "TSLiteralType",
        "TSNumberKeyword"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "trueType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSNumberKeyword",
        "TSIndexedAccessType",
        "TSTypeReference",
        "TSMappedType",
        "TSTypeLiteral",
        "TSLiteralType",
        "TSNeverKeyword",
        "TSParenthesizedType",
        "TSTupleType",
        "TSIntersectionType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "falseType": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSStringKeyword",
        "TSNeverKeyword",
        "TSIntersectionType",
        "TSMappedType",
        "TSTypeLiteral",
        "TSConditionalType",
        "TSTypeQuery",
        "TSUndefinedKeyword",
        "TSLiteralType",
        "TSTypeReference",
        "TSAnyKeyword",
        "TSTupleType",
        "TSUnionType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSNeverKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSNeverKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSUnknownKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSUnknownKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSNullKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSNullKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSThisType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSThisType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "Decorator": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "Decorator"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "CallExpression",
        "Identifier",
        "ArrowFunctionExpression",
        "MemberExpression",
        "YieldExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSSymbolKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSSymbolKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "ExportAllDeclaration": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "ExportAllDeclaration"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "source": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Literal",
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSInferType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSInferType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameter": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameter"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSImportType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSImportType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "isTypeOf": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": true,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "parameter": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSLiteralType"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "qualifier": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": false,
      "isNullable": true,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSRestType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSRestType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSArrayType",
        "TSTypeReference"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TaggedTemplateExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TaggedTemplateExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeParameters": {
      "isOptional": true,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSTypeParameterInstantiation"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "tag": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier",
        "MemberExpression",
        "TemplateLiteral"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "quasi": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TemplateLiteral"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXEmptyExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXEmptyExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXOpeningFragment": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXOpeningFragment"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXClosingFragment": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXClosingFragment"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXFragment": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXFragment"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "openingFragment": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXOpeningFragment"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "closingFragment": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXClosingFragment"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "children": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": [
        "JSXElement",
        "JSXFragment",
        "JSXText"
      ]
    }
  },
  "MetaProperty": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "MetaProperty"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "meta": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "property": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "Identifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSOptionalType": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSOptionalType"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "typeAnnotation": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "TSStringKeyword"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSAsyncKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSAsyncKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSPublicKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSPublicKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSPrivateKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSPrivateKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSStaticKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSStaticKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXSpreadChild": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXSpreadChild"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "expression": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "MemberExpression",
        "CallExpression",
        "JSXElement",
        "TSAsExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "JSXMemberExpression": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "JSXMemberExpression"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "object": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXIdentifier",
        "JSXMemberExpression",
        "MemberExpression"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    },
    "property": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": false,
      "stringValues": [],
      "isNumber": false,
      "containTypes": [
        "JSXIdentifier"
      ],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  },
  "TSProtectedKeyword": {
    "type": {
      "isOptional": false,
      "isNullable": false,
      "isBoolean": false,
      "isString": true,
      "stringValues": [
        "TSProtectedKeyword"
      ],
      "isNumber": false,
      "containTypes": [],
      "objectTypes": {},
      "containArrayOfTypes": []
    }
  }
}